// <auto-generated />
using System;
using LibraryManager.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryManager.Models.ChiTietPhieuMuonTra", b =>
                {
                    b.Property<int>("MaChiTietPhieuMuon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietPhieuMuon"), 1L, 1);

                    b.Property<int>("MaPhieuMuonTra")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietPhieuMuon");

                    b.HasIndex("MaPhieuMuonTra");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietPhieuMuonTras");

                    b.HasData(
                        new
                        {
                            MaChiTietPhieuMuon = 1,
                            MaPhieuMuonTra = 1,
                            MaSach = 1,
                            SoLuong = 2
                        },
                        new
                        {
                            MaChiTietPhieuMuon = 2,
                            MaPhieuMuonTra = 1,
                            MaSach = 2,
                            SoLuong = 1
                        },
                        new
                        {
                            MaChiTietPhieuMuon = 3,
                            MaPhieuMuonTra = 2,
                            MaSach = 3,
                            SoLuong = 1
                        },
                        new
                        {
                            MaChiTietPhieuMuon = 4,
                            MaPhieuMuonTra = 3,
                            MaSach = 4,
                            SoLuong = 1
                        },
                        new
                        {
                            MaChiTietPhieuMuon = 5,
                            MaPhieuMuonTra = 4,
                            MaSach = 5,
                            SoLuong = 2
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.DocGia", b =>
                {
                    b.Property<int>("MaDocGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDocGia"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDocGia");

                    b.ToTable("DocGias");

                    b.HasData(
                        new
                        {
                            MaDocGia = 1,
                            DiaChi = "Hà Nội",
                            Email = "a@example.com",
                            NgaySinh = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0911111111",
                            Ten = "Nguyễn Văn A"
                        },
                        new
                        {
                            MaDocGia = 2,
                            DiaChi = "TP.HCM",
                            Email = "b@example.com",
                            NgaySinh = new DateTime(1999, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0922222222",
                            Ten = "Trần Thị B"
                        },
                        new
                        {
                            MaDocGia = 3,
                            DiaChi = "Đà Nẵng",
                            Email = "c@example.com",
                            NgaySinh = new DateTime(2001, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0933333333",
                            Ten = "Lê Văn C"
                        },
                        new
                        {
                            MaDocGia = 4,
                            DiaChi = "Huế",
                            Email = "d@example.com",
                            NgaySinh = new DateTime(2002, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0944444444",
                            Ten = "Phạm Thị D"
                        },
                        new
                        {
                            MaDocGia = 5,
                            DiaChi = "Cần Thơ",
                            Email = "e@example.com",
                            NgaySinh = new DateTime(1998, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0955555555",
                            Ten = "Hoàng Văn E"
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.PhieuMuonTra", b =>
                {
                    b.Property<int>("MaPhieuMuonTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuMuonTra"), 1L, 1);

                    b.Property<bool>("DaTra")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HanTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaDocGia")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayMuon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTraThucTe")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPhieuMuonTra");

                    b.HasIndex("MaDocGia");

                    b.ToTable("PhieuMuonTras");

                    b.HasData(
                        new
                        {
                            MaPhieuMuonTra = 1,
                            DaTra = false,
                            HanTra = new DateTime(2025, 7, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            MaDocGia = 1,
                            NgayMuon = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MaPhieuMuonTra = 2,
                            DaTra = false,
                            HanTra = new DateTime(2025, 7, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            MaDocGia = 2,
                            NgayMuon = new DateTime(2025, 6, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MaPhieuMuonTra = 3,
                            DaTra = false,
                            HanTra = new DateTime(2025, 7, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            MaDocGia = 3,
                            NgayMuon = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MaPhieuMuonTra = 4,
                            DaTra = false,
                            HanTra = new DateTime(2025, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            MaDocGia = 4,
                            NgayMuon = new DateTime(2025, 6, 29, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MaPhieuMuonTra = 5,
                            DaTra = false,
                            HanTra = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            MaDocGia = 5,
                            NgayMuon = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.PhieuPhat", b =>
                {
                    b.Property<int>("MaPhieuPhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuPhat"), 1L, 1);

                    b.Property<bool>("DaThuTien")
                        .HasColumnType("bit");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDocGia")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTienPhat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaPhieuPhat");

                    b.HasIndex("MaDocGia");

                    b.ToTable("PhieuPhats");

                    b.HasData(
                        new
                        {
                            MaPhieuPhat = 1,
                            DaThuTien = false,
                            LyDo = "Trả trễ",
                            MaDocGia = 1,
                            NgayLap = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoTienPhat = 5000m
                        },
                        new
                        {
                            MaPhieuPhat = 2,
                            DaThuTien = false,
                            LyDo = "Mất sách",
                            MaDocGia = 2,
                            NgayLap = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoTienPhat = 7000m
                        },
                        new
                        {
                            MaPhieuPhat = 3,
                            DaThuTien = true,
                            LyDo = "Trả sai sách",
                            MaDocGia = 3,
                            NgayLap = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoTienPhat = 10000m
                        },
                        new
                        {
                            MaPhieuPhat = 4,
                            DaThuTien = false,
                            LyDo = "Sách rách",
                            MaDocGia = 4,
                            NgayLap = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoTienPhat = 3000m
                        },
                        new
                        {
                            MaPhieuPhat = 5,
                            DaThuTien = true,
                            LyDo = "Không trả sách",
                            MaDocGia = 5,
                            NgayLap = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            SoTienPhat = 8000m
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.Sach", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSach"), 1L, 1);

                    b.Property<string>("NXB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NamXuatBan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSach");

                    b.ToTable("Sachs");

                    b.HasData(
                        new
                        {
                            MaSach = 1,
                            NXB = "NXB Trẻ",
                            NamXuatBan = 2021,
                            SoLuong = 10,
                            TacGia = "Nguyễn Văn T",
                            Ten = "Lập trình C#",
                            TheLoai = "CNTT"
                        },
                        new
                        {
                            MaSach = 2,
                            NXB = "NXB Giáo dục",
                            NamXuatBan = 2020,
                            SoLuong = 15,
                            TacGia = "Phạm Văn P",
                            Ten = "Toán cao cấp",
                            TheLoai = "Giáo trình"
                        },
                        new
                        {
                            MaSach = 3,
                            NXB = "NXB Thanh Niên",
                            NamXuatBan = 2019,
                            SoLuong = 8,
                            TacGia = "Trần Thị Q",
                            Ten = "Kỹ năng sống",
                            TheLoai = "Kỹ năng"
                        },
                        new
                        {
                            MaSach = 4,
                            NXB = "NXB Văn hóa",
                            NamXuatBan = 2018,
                            SoLuong = 12,
                            TacGia = "Lê Văn K",
                            Ten = "Tiếng Anh giao tiếp",
                            TheLoai = "Ngoại ngữ"
                        },
                        new
                        {
                            MaSach = 5,
                            NXB = "NXB Lao động",
                            NamXuatBan = 2022,
                            SoLuong = 6,
                            TacGia = "Nguyễn Thị H",
                            Ten = "Tư duy phản biện",
                            TheLoai = "Kỹ năng"
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.TaiKhoan", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("TaiKhoans");

                    b.HasData(
                        new
                        {
                            UserName = "huii",
                            PassWord = "123"
                        },
                        new
                        {
                            UserName = "Hai",
                            PassWord = "1234"
                        },
                        new
                        {
                            UserName = "duy",
                            PassWord = "12345"
                        },
                        new
                        {
                            UserName = "manh",
                            PassWord = "123456"
                        });
                });

            modelBuilder.Entity("LibraryManager.Models.ChiTietPhieuMuonTra", b =>
                {
                    b.HasOne("LibraryManager.Models.PhieuMuonTra", "PhieuMuonTra")
                        .WithMany("ChiTietPhieuMuonTras")
                        .HasForeignKey("MaPhieuMuonTra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManager.Models.Sach", "Sach")
                        .WithMany("ChiTietPhieuMuonTras")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuMuonTra");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("LibraryManager.Models.PhieuMuonTra", b =>
                {
                    b.HasOne("LibraryManager.Models.DocGia", "DocGia")
                        .WithMany("PhieuMuonTras")
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryManager.Models.PhieuPhat", b =>
                {
                    b.HasOne("LibraryManager.Models.DocGia", "DocGia")
                        .WithMany("PhieuThuTienPhats")
                        .HasForeignKey("MaDocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocGia");
                });

            modelBuilder.Entity("LibraryManager.Models.DocGia", b =>
                {
                    b.Navigation("PhieuMuonTras");

                    b.Navigation("PhieuThuTienPhats");
                });

            modelBuilder.Entity("LibraryManager.Models.PhieuMuonTra", b =>
                {
                    b.Navigation("ChiTietPhieuMuonTras");
                });

            modelBuilder.Entity("LibraryManager.Models.Sach", b =>
                {
                    b.Navigation("ChiTietPhieuMuonTras");
                });
#pragma warning restore 612, 618
        }
    }
}
